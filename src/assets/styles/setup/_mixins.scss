/* Breakpoint mixins */

@use "sass:map";

$breakpoints: (
    mobile-breakpoint: em(620px),
    narrow-breakpoint: em(960px),
    normal-breakpoint: em(1200px),
);

@mixin mq($key) {
    $size: map.get($breakpoints, $key);

    @media (min-width: $size) {
        @content;
    }
}
@mixin for-narrow-layout {
    @media (min-width: calc(#{map.get($breakpoints, mobile-breakpoint)} + 40px)) {
        @content;
    }
}

@mixin for-normal-layout {
    @media (min-width: calc(#{map.get($breakpoints, narrow-breakpoint)} + 40px)) {
        @content;
    }
}

@mixin for-wide-layout {
    @media (min-width: calc(#{map.get($breakpoints, normal-breakpoint)} + 40px)) {
        @content;
    }
}


@mixin view-mode-button(
    $side: left,
    $top: 50%,
    $translateY: -50%,
    $left-right: 8px,
    $wide-left-right: 30%
) {
    display: none;
    &.view-mode {
        &.visible {
            position: absolute;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: rgba(#ffffff, 0.2);
            border-radius: 50%;
            padding: 8px;
            top: $top;
            z-index: 15;
            transform: translateY($translateY);

            @if $side == left {
                left: $left-right;
            } @else if $side == right {
                right: $left-right;
            }

            width: 32px;

            // Apply wide layout adjustments
            @include for-wide-layout {
                @if $side == left {
                    left: $wide-left-right;
                } @else if $side == right {
                    right: $wide-left-right;
                }
            }
        }
    }
}

